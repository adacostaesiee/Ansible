---
- hosts: [dbservers]
  become: true

  handlers:
    - name: "Restart mysql service"
      service:
        name: mysql
        state: restarted

  tasks:

    - name: "Create MariaDB Directories"
      file:
        path: /data/MariaDB
        state: directory
        owner: mysql
        group: mysql
        recurse: yes
      with_items:
        - db
        - log

    - name: "Count files in /data/db"
      find:
        path: /data/db
        patterns: '\*'
      register: db_files

    - name: "Run mysql_install_db only if /data/db is empty"
      command: mysql_install_db --datadir=/data/db
      when: db_files.matched|int == 0

    - name: "Push MariaDB config file to dbserver master"
      template:
        src: "{{ item }}"
        dest: /etc/mysql/mariadb.conf.d/{{ item | basename | regex_replace('\.j2$', '') }}
      with_fileglob:
        - files/50-server.cnf.j2
      notify: Restart mysql service
      when: mysql_server_id==1

    - name: "Push MariaDB config file to dbserver slave"
      template:
        src: "{{ item }}"
        dest: /etc/mysql/mariadb.conf.d/{{ item | basename | regex_replace('\.j2$', '.cnf') }}
      with_fileglob:
        - files/50-server.j2
      notify: Restart mysql service
      tags: conf
      when: mysql_server_id==2

    - name: "Create user 'glpi' with password, all database privileges and 'WITH GRANT OPTION' in db1 and db2"
      community.mysql.mysql_user:
        login_host: localhost
        login_user: root
        login_password: "{{ mysql_root_password }}"
        state: present
        name: glpi
        password: password
        host: "%"
        priv:
          '*.*': 'ALL,GRANT'

- hosts: [webservers]
  become: true

  handlers:
    - name: "Remove install.php"
      file:
        path: "{{ glpi_install_path }}/glpi/install/install.php"
        state: absent

  vars:
    glpi_version: 9.5.6
    glpi_version_package: glpi-9.5.6.tgz
    glpi_auto_install: true
    glpi_update: false
    glpi_download_url: "https://github.com/glpi-project/glpi/releases/download/{{ glpi_version }}/{{ glpi_version_package }}"

    glpi_web_owner: "www-data"
    glpi_web_group: "www-data"
    glpi_install_path: /var/www

    glpi_db_host: "dbserver1"
    glpi_db_port: "3306"
    glpi_db_name: "glpi"
    glpi_db_user: "glpi"
    glpi_db_password: "password"

  tasks:
    - name: "Check if GLPI is already installed"
      stat:
        path: "{{ glpi_install_path }}/glpi"
      register: glpiinstalled

    - name: "Install apache2, php tools, PyMySql webservers"
      apt:
        name:
          - apache2
          - apache2-doc
          - apache2-utils
          - php
          - php-ldap
          - php-mysql
          - php-mbstring
          - php-gd
          - php-intl
          - php-curl
          - php-xml
          - php-apcu
          - php-xmlrpc
          - php-zip
          - php7.4-bz2
          - python3-pymysql
        update_cache: yes
        state: latest

    - name: "Download and extract GLPI"
      unarchive:
        src: "{{ glpi_download_url }}"
        remote_src: true
        dest: "{{ glpi_install_path }}"
        owner: "{{ glpi_web_owner }}"
        group: "{{ glpi_web_group }}"
        validate_certs: false
      when: not glpiinstalled.stat.exists or glpi_update

    - name: "GLPI Automatic installation"
      command: "su root"
      command: "sudo -u www-data php bin/console -n db:install -H {{ glpi_db_host }} -P {{ glpi_db_port }} -d {{ glpi_db_name }} -u {{ glpi_db_user }} -p {{ glpi_db_password }} --force"
      args:
        chdir: "{{ glpi_install_path }}/glpi"
      when: ( not glpiinstalled.stat.exists or glpi_update ) and glpi_auto_install
      notify:
        - Remove install.php

    - name: "Set permisions to files directory"
      file:
        path: "{{ glpi_install_path }}/glpi/files"
        recurse: true
        owner: "{{ glpi_web_owner }}"
        group: "{{ glpi_web_group }}"
      when: not glpiinstalled.stat.exists or glpi_update

    - name: "Set permisions to config directory"
      file:
        path: "{{ glpi_install_path }}/glpi/config"
        recurse: true
        owner: "{{ glpi_web_owner }}"
        group: "{{ glpi_web_group }}"
      when: not glpiinstalled.stat.exists or glpi_update