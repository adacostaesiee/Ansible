---
- hosts: [dbservers]
  become: true

  tasks:

    - name: "Create empty glpi database"
      community.mysql.mysql_db:
        login_host: localhost
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name:
          - glpi
        state: present
      when: mysql_server_id==2

    - name: "Create replication_user inside of the database"
      community.mysql.mysql_query:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        query: CREATE USER IF NOT EXISTS 'replication_user'@'%' IDENTIFIED BY '{{ mysql_replication_password }}';

    - name: "Grant REPLICATION SLAVE privileges to replication_user"
      community.mysql.mysql_query:
        login_host: localhost
        login_user: root
        login_password: "{{ mysql_root_password }}"
        query: GRANT REPLICATION SLAVE ON *.* TO 'replication_user'@'%';

    - name: "Restart mysql service"
      service:
        name: mysql
        state: restarted

    - block:

      - name: "Get master status"
        community.mysql.mysql_query:
          login_host: localhost
          login_user: root
          login_password: "{{ mysql_root_password }}"
          query: SHOW MASTER STATUS;
        register: File
      - debug:
          msg: "{{ item }}"
        with_items:
          - "{{ File }}"
        when: mysql_server_id==1

      - name: "Stop slave"
        community.mysql.mysql_query:
          login_host: localhost
          login_user: root
          login_password: "{{ mysql_root_password }}"
          query: STOP SLAVE;
        when: mysql_server_id==2


      - name: "Change master to"
        community.mysql.mysql_query:
          login_host: localhost
          login_user: root
          login_password: "{{ mysql_root_password }}"
          query: CHANGE MASTER TO MASTER_HOST='dbserver1', MASTER_USER='replication_user', MASTER_PASSWORD='{{ mysql_replication_password }}', MASTER_PORT=3306, MASTER_LOG_FILE='{{ item.file }}', MASTER_LOG_POS={{ item.position }}, MASTER_CONNECT_RETRY=10;
        when: mysql_server_id==2
        with_items:
          - file: "{{ hostvars['dbserver1']['File'].query_result[0][0].File}}"
            position: "{{ hostvars['dbserver1']['File'].query_result[0][0].Position}}"

      - name: "Start slave"
        community.mysql.mysql_query:
          login_host: localhost
          login_user: root
          login_password: "{{ mysql_root_password }}"
          query: START SLAVE;
        when: mysql_server_id==2